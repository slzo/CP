State 17 conflicts: 1 shift/reduce
State 48 conflicts: 2 shift/reduce
State 49 conflicts: 3 shift/reduce
State 64 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 6 shift/reduce
State 109 conflicts: 3 shift/reduce
State 110 conflicts: 3 shift/reduce
State 169 conflicts: 16 shift/reduce
State 170 conflicts: 1 shift/reduce


Grammar

    0 $accept: ComUnit $end

    1 ComUnit: Decl
    2        | FuncDef
    3        | ComUnit Decl
    4        | ComUnit FuncDef

    5 Decl: ConstDecl
    6     | VarDecl

    7 ConstDecl: CONST BasicType ConstDefs SEMICOLON

    8 ConstDefs: ConstDef
    9          | ConstDefs COMMA ConstDef

   10 ConstDef: pDeclIdentifier ASSIGN IntConst
   11         | ArrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   12 BasicType: T_INT
   13          | T_VOID

   14 IntConst: INTEGER

   15 CompIdentifier: Identifier
   16               | ArrayIdentifier

   17 ArrayIdentifier: Identifier LBRACKET Exp RBRACKET
   18                | ArrayIdentifier LBRACKET Exp RBRACKET

   19 Identifier: IDENTIFIER

   20 DeclCompIdentifier: pDeclIdentifier
   21                   | ArrayDeclIdentifier

   22 pDeclIdentifier: DeclIdentifier

   23 ArrayDeclIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET
   24                    | ArrayDeclIdentifier LBRACKET INTEGER RBRACKET

   25 DeclIdentifier: IDENTIFIER

   26 ArrayInitVal: IntConst
   27             | ArrayInitVal COMMA IntConst

   28 VarDecl: BasicType VarDefs SEMICOLON

   29 VarDefs: VarDef
   30        | VarDefs COMMA VarDef

   31 VarDef: DeclCompIdentifier
   32       | DeclCompIdentifier ASSIGN Exp
   33       | ArrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN FuncFParams RPAREN LBRACE BlockItems RBRACE
   35        | BasicType pDeclIdentifier FuncLPAREN RPAREN LBRACE BlockItems RBRACE

   36 FuncLPAREN: LPAREN

   37 FuncFParams: FuncFParam
   38            | FuncFParams COMMA FuncFParam

   39 FuncFParam: BasicType pDeclIdentifier

   40 Block: BlockLBRACE BlockItems BlockRBRACE

   41 BlockLBRACE: LBRACE

   42 BlockRBRACE: RBRACE

   43 BlockItems: BlockItem
   44           | BlockItems BlockItem

   45 BlockItem: Decl
   46          | Stmt

   47 Stmt_: LBRACE BlockItems RBRACE
   48      | Stmt

   49 Stmt: SEMICOLON
   50     | Exp SEMICOLON
   51     | Block
   52     | IF LPAREN Cond RPAREN Stmt_ ELSE Stmt_
   53     | IF LPAREN Cond RPAREN Stmt_
   54     | WHILE LPAREN Cond RPAREN Stmt_
   55     | BREAK SEMICOLON
   56     | CONTINUE SEMICOLON
   57     | RETURN SEMICOLON
   58     | RETURN Exp SEMICOLON

   59 IF: IF_

   60 WHILE: WHILE_

   61 Exp: addExp
   62    | CompIdentifier ASSIGN Exp

   63 Cond: LOrExp

   64 addExp: mulExp
   65       | addExp PLUS mulExp
   66       | addExp MINUS mulExp

   67 mulExp: unaryExp
   68       | mulExp MUL unaryExp
   69       | mulExp DIV unaryExp
   70       | mulExp MOD unaryExp

   71 unaryExp: primaryExp
   72         | NOT Cond
   73         | PLUS primaryExp
   74         | MINUS primaryExp

   75 primaryExp: IntConst
   76           | LPAREN Exp RPAREN
   77           | LPAREN Cond RPAREN
   78           | Identifier LPAREN FuncRParams RPAREN
   79           | Identifier LPAREN RPAREN
   80           | CompIdentifier

   81 FuncRParams: Exp
   82            | FuncRParams COMMA Exp

   83 LOrExp: LAndExp
   84       | LAndExp OR LOrExp

   85 LAndExp: eqExp
   86        | eqExp AND LAndExp

   87 eqExp: relExp
   88      | relExp EQ eqExp
   89      | relExp NEQ eqExp

   90 relExp: Exp
   91       | relExp GRA Exp
   92       | relExp LES Exp
   93       | relExp GRAEQ Exp
   94       | relExp LESEQ Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_INT (258) 12
    T_VOID (259) 13
    ASSIGN (260) 10 11 32 33 62
    SEMICOLON (261) 7 28 49 50 55 56 57 58
    COMMA (262) 9 27 30 38 82
    LPAREN (263) 36 52 53 54 76 77 78 79
    RPAREN (264) 34 35 52 53 54 76 77 78 79
    LBRACE (265) 11 33 34 35 41 47
    RBRACE (266) 11 33 34 35 42 47
    LBRACKET (267) 17 18 23 24
    RBRACKET (268) 17 18 23 24
    CONST (269) 7
    IF_ (270) 59
    ELSE (271) 52
    WHILE_ (272) 60
    BREAK (273) 55
    CONTINUE (274) 56
    RETURN (275) 57 58
    EQ (276) 88
    GRAEQ (277) 93
    LESEQ (278) 94
    NEQ (279) 89
    GRA (280) 91
    LES (281) 92
    PLUS (282) 65 73
    MINUS (283) 66 74
    MUL (284) 68
    DIV (285) 69
    MOD (286) 70
    AND (287) 86
    OR (288) 84
    NOT (289) 72
    IDENTIFIER (290) 19 25
    INTEGER (291) 14 23 24


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    ComUnit (38)
        on left: 1 2 3 4
        on right: 0 3 4
    Decl (39)
        on left: 5 6
        on right: 1 3 45
    ConstDecl (40)
        on left: 7
        on right: 5
    ConstDefs (41)
        on left: 8 9
        on right: 7 9
    ConstDef (42)
        on left: 10 11
        on right: 8 9
    BasicType (43)
        on left: 12 13
        on right: 7 28 34 35 39
    IntConst (44)
        on left: 14
        on right: 10 26 27 75
    CompIdentifier (45)
        on left: 15 16
        on right: 62 80
    ArrayIdentifier (46)
        on left: 17 18
        on right: 16 18
    Identifier (47)
        on left: 19
        on right: 15 17 78 79
    DeclCompIdentifier (48)
        on left: 20 21
        on right: 31 32
    pDeclIdentifier (49)
        on left: 22
        on right: 10 20 23 34 35 39
    ArrayDeclIdentifier (50)
        on left: 23 24
        on right: 11 21 24 33
    DeclIdentifier (51)
        on left: 25
        on right: 22
    ArrayInitVal (52)
        on left: 26 27
        on right: 11 27 33
    VarDecl (53)
        on left: 28
        on right: 6
    VarDefs (54)
        on left: 29 30
        on right: 28 30
    VarDef (55)
        on left: 31 32 33
        on right: 29 30
    FuncDef (56)
        on left: 34 35
        on right: 2 4
    FuncLPAREN (57)
        on left: 36
        on right: 34 35
    FuncFParams (58)
        on left: 37 38
        on right: 34 38
    FuncFParam (59)
        on left: 39
        on right: 37 38
    Block (60)
        on left: 40
        on right: 51
    BlockLBRACE (61)
        on left: 41
        on right: 40
    BlockRBRACE (62)
        on left: 42
        on right: 40
    BlockItems (63)
        on left: 43 44
        on right: 34 35 40 44 47
    BlockItem (64)
        on left: 45 46
        on right: 43 44
    Stmt_ (65)
        on left: 47 48
        on right: 52 53 54
    Stmt (66)
        on left: 49 50 51 52 53 54 55 56 57 58
        on right: 46 48
    IF (67)
        on left: 59
        on right: 52 53
    WHILE (68)
        on left: 60
        on right: 54
    Exp (69)
        on left: 61 62
        on right: 17 18 32 50 58 62 76 81 82 90 91 92 93 94
    Cond (70)
        on left: 63
        on right: 52 53 54 72 77
    addExp (71)
        on left: 64 65 66
        on right: 61 65 66
    mulExp (72)
        on left: 67 68 69 70
        on right: 64 65 66 68 69 70
    unaryExp (73)
        on left: 71 72 73 74
        on right: 67 68 69 70
    primaryExp (74)
        on left: 75 76 77 78 79 80
        on right: 71 73 74
    FuncRParams (75)
        on left: 81 82
        on right: 78 82
    LOrExp (76)
        on left: 83 84
        on right: 63 84
    LAndExp (77)
        on left: 85 86
        on right: 83 84 86
    eqExp (78)
        on left: 87 88 89
        on right: 85 86 88 89
    relExp (79)
        on left: 90 91 92 93 94
        on right: 87 88 89 91 92 93 94


State 0

    0 $accept: • ComUnit $end

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2
    CONST   shift, and go to state 3

    ComUnit    go to state 4
    Decl       go to state 5
    ConstDecl  go to state 6
    BasicType  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 1

   12 BasicType: T_INT •

    $default  reduce using rule 12 (BasicType)


State 2

   13 BasicType: T_VOID •

    $default  reduce using rule 13 (BasicType)


State 3

    7 ConstDecl: CONST • BasicType ConstDefs SEMICOLON

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    BasicType  go to state 10


State 4

    0 $accept: ComUnit • $end
    3 ComUnit: ComUnit • Decl
    4        | ComUnit • FuncDef

    $end    shift, and go to state 11
    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2
    CONST   shift, and go to state 3

    Decl       go to state 12
    ConstDecl  go to state 6
    BasicType  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 13


State 5

    1 ComUnit: Decl •

    $default  reduce using rule 1 (ComUnit)


State 6

    5 Decl: ConstDecl •

    $default  reduce using rule 5 (Decl)


State 7

   28 VarDecl: BasicType • VarDefs SEMICOLON
   34 FuncDef: BasicType • pDeclIdentifier FuncLPAREN FuncFParams RPAREN LBRACE BlockItems RBRACE
   35        | BasicType • pDeclIdentifier FuncLPAREN RPAREN LBRACE BlockItems RBRACE

    IDENTIFIER  shift, and go to state 14

    DeclCompIdentifier   go to state 15
    pDeclIdentifier      go to state 16
    ArrayDeclIdentifier  go to state 17
    DeclIdentifier       go to state 18
    VarDefs              go to state 19
    VarDef               go to state 20


State 8

    6 Decl: VarDecl •

    $default  reduce using rule 6 (Decl)


State 9

    2 ComUnit: FuncDef •

    $default  reduce using rule 2 (ComUnit)


State 10

    7 ConstDecl: CONST BasicType • ConstDefs SEMICOLON

    IDENTIFIER  shift, and go to state 14

    ConstDefs            go to state 21
    ConstDef             go to state 22
    pDeclIdentifier      go to state 23
    ArrayDeclIdentifier  go to state 24
    DeclIdentifier       go to state 18


State 11

    0 $accept: ComUnit $end •

    $default  accept


State 12

    3 ComUnit: ComUnit Decl •

    $default  reduce using rule 3 (ComUnit)


State 13

    4 ComUnit: ComUnit FuncDef •

    $default  reduce using rule 4 (ComUnit)


State 14

   25 DeclIdentifier: IDENTIFIER •

    $default  reduce using rule 25 (DeclIdentifier)


State 15

   31 VarDef: DeclCompIdentifier •
   32       | DeclCompIdentifier • ASSIGN Exp

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 31 (VarDef)


State 16

   20 DeclCompIdentifier: pDeclIdentifier •
   23 ArrayDeclIdentifier: pDeclIdentifier • LBRACKET INTEGER RBRACKET
   34 FuncDef: BasicType pDeclIdentifier • FuncLPAREN FuncFParams RPAREN LBRACE BlockItems RBRACE
   35        | BasicType pDeclIdentifier • FuncLPAREN RPAREN LBRACE BlockItems RBRACE

    LPAREN    shift, and go to state 26
    LBRACKET  shift, and go to state 27

    $default  reduce using rule 20 (DeclCompIdentifier)

    FuncLPAREN  go to state 28


State 17

   21 DeclCompIdentifier: ArrayDeclIdentifier •
   24 ArrayDeclIdentifier: ArrayDeclIdentifier • LBRACKET INTEGER RBRACKET
   33 VarDef: ArrayDeclIdentifier • ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 29
    LBRACKET  shift, and go to state 30

    ASSIGN    [reduce using rule 21 (DeclCompIdentifier)]
    $default  reduce using rule 21 (DeclCompIdentifier)


State 18

   22 pDeclIdentifier: DeclIdentifier •

    $default  reduce using rule 22 (pDeclIdentifier)


State 19

   28 VarDecl: BasicType VarDefs • SEMICOLON
   30 VarDefs: VarDefs • COMMA VarDef

    SEMICOLON  shift, and go to state 31
    COMMA      shift, and go to state 32


State 20

   29 VarDefs: VarDef •

    $default  reduce using rule 29 (VarDefs)


State 21

    7 ConstDecl: CONST BasicType ConstDefs • SEMICOLON
    9 ConstDefs: ConstDefs • COMMA ConstDef

    SEMICOLON  shift, and go to state 33
    COMMA      shift, and go to state 34


State 22

    8 ConstDefs: ConstDef •

    $default  reduce using rule 8 (ConstDefs)


State 23

   10 ConstDef: pDeclIdentifier • ASSIGN IntConst
   23 ArrayDeclIdentifier: pDeclIdentifier • LBRACKET INTEGER RBRACKET

    ASSIGN    shift, and go to state 35
    LBRACKET  shift, and go to state 27


State 24

   11 ConstDef: ArrayDeclIdentifier • ASSIGN LBRACE ArrayInitVal RBRACE
   24 ArrayDeclIdentifier: ArrayDeclIdentifier • LBRACKET INTEGER RBRACKET

    ASSIGN    shift, and go to state 36
    LBRACKET  shift, and go to state 30


State 25

   32 VarDef: DeclCompIdentifier ASSIGN • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 47
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 26

   36 FuncLPAREN: LPAREN •

    $default  reduce using rule 36 (FuncLPAREN)


State 27

   23 ArrayDeclIdentifier: pDeclIdentifier LBRACKET • INTEGER RBRACKET

    INTEGER  shift, and go to state 52


State 28

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN • FuncFParams RPAREN LBRACE BlockItems RBRACE
   35        | BasicType pDeclIdentifier FuncLPAREN • RPAREN LBRACE BlockItems RBRACE

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2
    RPAREN  shift, and go to state 53

    BasicType    go to state 54
    FuncFParams  go to state 55
    FuncFParam   go to state 56


State 29

   33 VarDef: ArrayDeclIdentifier ASSIGN • LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 57


State 30

   24 ArrayDeclIdentifier: ArrayDeclIdentifier LBRACKET • INTEGER RBRACKET

    INTEGER  shift, and go to state 58


State 31

   28 VarDecl: BasicType VarDefs SEMICOLON •

    $default  reduce using rule 28 (VarDecl)


State 32

   30 VarDefs: VarDefs COMMA • VarDef

    IDENTIFIER  shift, and go to state 14

    DeclCompIdentifier   go to state 15
    pDeclIdentifier      go to state 59
    ArrayDeclIdentifier  go to state 17
    DeclIdentifier       go to state 18
    VarDef               go to state 60


State 33

    7 ConstDecl: CONST BasicType ConstDefs SEMICOLON •

    $default  reduce using rule 7 (ConstDecl)


State 34

    9 ConstDefs: ConstDefs COMMA • ConstDef

    IDENTIFIER  shift, and go to state 14

    ConstDef             go to state 61
    pDeclIdentifier      go to state 23
    ArrayDeclIdentifier  go to state 24
    DeclIdentifier       go to state 18


State 35

   10 ConstDef: pDeclIdentifier ASSIGN • IntConst

    INTEGER  shift, and go to state 42

    IntConst  go to state 62


State 36

   11 ConstDef: ArrayDeclIdentifier ASSIGN • LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 63


State 37

   76 primaryExp: LPAREN • Exp RPAREN
   77           | LPAREN • Cond RPAREN

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 64
    Cond             go to state 65
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    LOrExp           go to state 66
    LAndExp          go to state 67
    eqExp            go to state 68
    relExp           go to state 69


State 38

   73 unaryExp: PLUS • primaryExp

    LPAREN      shift, and go to state 37
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    primaryExp       go to state 71


State 39

   74 unaryExp: MINUS • primaryExp

    LPAREN      shift, and go to state 37
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    primaryExp       go to state 72


State 40

   72 unaryExp: NOT • Cond

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    Cond             go to state 74
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    LOrExp           go to state 66
    LAndExp          go to state 67
    eqExp            go to state 68
    relExp           go to state 69


State 41

   19 Identifier: IDENTIFIER •

    $default  reduce using rule 19 (Identifier)


State 42

   14 IntConst: INTEGER •

    $default  reduce using rule 14 (IntConst)


State 43

   75 primaryExp: IntConst •

    $default  reduce using rule 75 (primaryExp)


State 44

   62 Exp: CompIdentifier • ASSIGN Exp
   80 primaryExp: CompIdentifier •

    ASSIGN  shift, and go to state 75

    $default  reduce using rule 80 (primaryExp)


State 45

   16 CompIdentifier: ArrayIdentifier •
   18 ArrayIdentifier: ArrayIdentifier • LBRACKET Exp RBRACKET

    LBRACKET  shift, and go to state 76

    $default  reduce using rule 16 (CompIdentifier)


State 46

   15 CompIdentifier: Identifier •
   17 ArrayIdentifier: Identifier • LBRACKET Exp RBRACKET
   78 primaryExp: Identifier • LPAREN FuncRParams RPAREN
   79           | Identifier • LPAREN RPAREN

    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78

    $default  reduce using rule 15 (CompIdentifier)


State 47

   32 VarDef: DeclCompIdentifier ASSIGN Exp •

    $default  reduce using rule 32 (VarDef)


State 48

   61 Exp: addExp •
   65 addExp: addExp • PLUS mulExp
   66       | addExp • MINUS mulExp

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80

    PLUS      [reduce using rule 61 (Exp)]
    MINUS     [reduce using rule 61 (Exp)]
    $default  reduce using rule 61 (Exp)


State 49

   64 addExp: mulExp •
   68 mulExp: mulExp • MUL unaryExp
   69       | mulExp • DIV unaryExp
   70       | mulExp • MOD unaryExp

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    MUL       [reduce using rule 64 (addExp)]
    DIV       [reduce using rule 64 (addExp)]
    MOD       [reduce using rule 64 (addExp)]
    $default  reduce using rule 64 (addExp)


State 50

   67 mulExp: unaryExp •

    $default  reduce using rule 67 (mulExp)


State 51

   71 unaryExp: primaryExp •

    $default  reduce using rule 71 (unaryExp)


State 52

   23 ArrayDeclIdentifier: pDeclIdentifier LBRACKET INTEGER • RBRACKET

    RBRACKET  shift, and go to state 84


State 53

   35 FuncDef: BasicType pDeclIdentifier FuncLPAREN RPAREN • LBRACE BlockItems RBRACE

    LBRACE  shift, and go to state 85


State 54

   39 FuncFParam: BasicType • pDeclIdentifier

    IDENTIFIER  shift, and go to state 14

    pDeclIdentifier  go to state 86
    DeclIdentifier   go to state 18


State 55

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN FuncFParams • RPAREN LBRACE BlockItems RBRACE
   38 FuncFParams: FuncFParams • COMMA FuncFParam

    COMMA   shift, and go to state 87
    RPAREN  shift, and go to state 88


State 56

   37 FuncFParams: FuncFParam •

    $default  reduce using rule 37 (FuncFParams)


State 57

   33 VarDef: ArrayDeclIdentifier ASSIGN LBRACE • ArrayInitVal RBRACE

    INTEGER  shift, and go to state 42

    IntConst      go to state 89
    ArrayInitVal  go to state 90


State 58

   24 ArrayDeclIdentifier: ArrayDeclIdentifier LBRACKET INTEGER • RBRACKET

    RBRACKET  shift, and go to state 91


State 59

   20 DeclCompIdentifier: pDeclIdentifier •
   23 ArrayDeclIdentifier: pDeclIdentifier • LBRACKET INTEGER RBRACKET

    LBRACKET  shift, and go to state 27

    $default  reduce using rule 20 (DeclCompIdentifier)


State 60

   30 VarDefs: VarDefs COMMA VarDef •

    $default  reduce using rule 30 (VarDefs)


State 61

    9 ConstDefs: ConstDefs COMMA ConstDef •

    $default  reduce using rule 9 (ConstDefs)


State 62

   10 ConstDef: pDeclIdentifier ASSIGN IntConst •

    $default  reduce using rule 10 (ConstDef)


State 63

   11 ConstDef: ArrayDeclIdentifier ASSIGN LBRACE • ArrayInitVal RBRACE

    INTEGER  shift, and go to state 42

    IntConst      go to state 89
    ArrayInitVal  go to state 92


State 64

   76 primaryExp: LPAREN Exp • RPAREN
   90 relExp: Exp •

    RPAREN  shift, and go to state 93

    RPAREN    [reduce using rule 90 (relExp)]
    $default  reduce using rule 90 (relExp)


State 65

   77 primaryExp: LPAREN Cond • RPAREN

    RPAREN  shift, and go to state 94


State 66

   63 Cond: LOrExp •

    $default  reduce using rule 63 (Cond)


State 67

   83 LOrExp: LAndExp •
   84       | LAndExp • OR LOrExp

    OR  shift, and go to state 95

    OR        [reduce using rule 83 (LOrExp)]
    $default  reduce using rule 83 (LOrExp)


State 68

   85 LAndExp: eqExp •
   86        | eqExp • AND LAndExp

    AND  shift, and go to state 96

    AND       [reduce using rule 85 (LAndExp)]
    $default  reduce using rule 85 (LAndExp)


State 69

   87 eqExp: relExp •
   88      | relExp • EQ eqExp
   89      | relExp • NEQ eqExp
   91 relExp: relExp • GRA Exp
   92       | relExp • LES Exp
   93       | relExp • GRAEQ Exp
   94       | relExp • LESEQ Exp

    EQ     shift, and go to state 97
    GRAEQ  shift, and go to state 98
    LESEQ  shift, and go to state 99
    NEQ    shift, and go to state 100
    GRA    shift, and go to state 101
    LES    shift, and go to state 102

    EQ        [reduce using rule 87 (eqExp)]
    GRAEQ     [reduce using rule 87 (eqExp)]
    LESEQ     [reduce using rule 87 (eqExp)]
    NEQ       [reduce using rule 87 (eqExp)]
    GRA       [reduce using rule 87 (eqExp)]
    LES       [reduce using rule 87 (eqExp)]
    $default  reduce using rule 87 (eqExp)


State 70

   80 primaryExp: CompIdentifier •

    $default  reduce using rule 80 (primaryExp)


State 71

   73 unaryExp: PLUS primaryExp •

    $default  reduce using rule 73 (unaryExp)


State 72

   74 unaryExp: MINUS primaryExp •

    $default  reduce using rule 74 (unaryExp)


State 73

   90 relExp: Exp •

    $default  reduce using rule 90 (relExp)


State 74

   72 unaryExp: NOT Cond •

    $default  reduce using rule 72 (unaryExp)


State 75

   62 Exp: CompIdentifier ASSIGN • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 103
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 76

   18 ArrayIdentifier: ArrayIdentifier LBRACKET • Exp RBRACKET

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 104
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 77

   78 primaryExp: Identifier LPAREN • FuncRParams RPAREN
   79           | Identifier LPAREN • RPAREN

    LPAREN      shift, and go to state 37
    RPAREN      shift, and go to state 105
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 106
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    FuncRParams      go to state 107


State 78

   17 ArrayIdentifier: Identifier LBRACKET • Exp RBRACKET

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 108
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 79

   65 addExp: addExp PLUS • mulExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    mulExp           go to state 109
    unaryExp         go to state 50
    primaryExp       go to state 51


State 80

   66 addExp: addExp MINUS • mulExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    mulExp           go to state 110
    unaryExp         go to state 50
    primaryExp       go to state 51


State 81

   68 mulExp: mulExp MUL • unaryExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    unaryExp         go to state 111
    primaryExp       go to state 51


State 82

   69 mulExp: mulExp DIV • unaryExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    unaryExp         go to state 112
    primaryExp       go to state 51


State 83

   70 mulExp: mulExp MOD • unaryExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 70
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    unaryExp         go to state 113
    primaryExp       go to state 51


State 84

   23 ArrayDeclIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET •

    $default  reduce using rule 23 (ArrayDeclIdentifier)


State 85

   35 FuncDef: BasicType pDeclIdentifier FuncLPAREN RPAREN LBRACE • BlockItems RBRACE

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItems       go to state 125
    BlockItem        go to state 126
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 86

   39 FuncFParam: BasicType pDeclIdentifier •

    $default  reduce using rule 39 (FuncFParam)


State 87

   38 FuncFParams: FuncFParams COMMA • FuncFParam

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    BasicType   go to state 54
    FuncFParam  go to state 131


State 88

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN FuncFParams RPAREN • LBRACE BlockItems RBRACE

    LBRACE  shift, and go to state 132


State 89

   26 ArrayInitVal: IntConst •

    $default  reduce using rule 26 (ArrayInitVal)


State 90

   27 ArrayInitVal: ArrayInitVal • COMMA IntConst
   33 VarDef: ArrayDeclIdentifier ASSIGN LBRACE ArrayInitVal • RBRACE

    COMMA   shift, and go to state 133
    RBRACE  shift, and go to state 134


State 91

   24 ArrayDeclIdentifier: ArrayDeclIdentifier LBRACKET INTEGER RBRACKET •

    $default  reduce using rule 24 (ArrayDeclIdentifier)


State 92

   11 ConstDef: ArrayDeclIdentifier ASSIGN LBRACE ArrayInitVal • RBRACE
   27 ArrayInitVal: ArrayInitVal • COMMA IntConst

    COMMA   shift, and go to state 133
    RBRACE  shift, and go to state 135


State 93

   76 primaryExp: LPAREN Exp RPAREN •

    $default  reduce using rule 76 (primaryExp)


State 94

   77 primaryExp: LPAREN Cond RPAREN •

    $default  reduce using rule 77 (primaryExp)


State 95

   84 LOrExp: LAndExp OR • LOrExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    LOrExp           go to state 136
    LAndExp          go to state 67
    eqExp            go to state 68
    relExp           go to state 69


State 96

   86 LAndExp: eqExp AND • LAndExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    LAndExp          go to state 137
    eqExp            go to state 68
    relExp           go to state 69


State 97

   88 eqExp: relExp EQ • eqExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    eqExp            go to state 138
    relExp           go to state 69


State 98

   93 relExp: relExp GRAEQ • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 139
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 99

   94 relExp: relExp LESEQ • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 140
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 100

   89 eqExp: relExp NEQ • eqExp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    eqExp            go to state 141
    relExp           go to state 69


State 101

   91 relExp: relExp GRA • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 142
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 102

   92 relExp: relExp LES • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 143
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 103

   62 Exp: CompIdentifier ASSIGN Exp •

    $default  reduce using rule 62 (Exp)


State 104

   18 ArrayIdentifier: ArrayIdentifier LBRACKET Exp • RBRACKET

    RBRACKET  shift, and go to state 144


State 105

   79 primaryExp: Identifier LPAREN RPAREN •

    $default  reduce using rule 79 (primaryExp)


State 106

   81 FuncRParams: Exp •

    $default  reduce using rule 81 (FuncRParams)


State 107

   78 primaryExp: Identifier LPAREN FuncRParams • RPAREN
   82 FuncRParams: FuncRParams • COMMA Exp

    COMMA   shift, and go to state 145
    RPAREN  shift, and go to state 146


State 108

   17 ArrayIdentifier: Identifier LBRACKET Exp • RBRACKET

    RBRACKET  shift, and go to state 147


State 109

   65 addExp: addExp PLUS mulExp •
   68 mulExp: mulExp • MUL unaryExp
   69       | mulExp • DIV unaryExp
   70       | mulExp • MOD unaryExp

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    MUL       [reduce using rule 65 (addExp)]
    DIV       [reduce using rule 65 (addExp)]
    MOD       [reduce using rule 65 (addExp)]
    $default  reduce using rule 65 (addExp)


State 110

   66 addExp: addExp MINUS mulExp •
   68 mulExp: mulExp • MUL unaryExp
   69       | mulExp • DIV unaryExp
   70       | mulExp • MOD unaryExp

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    MUL       [reduce using rule 66 (addExp)]
    DIV       [reduce using rule 66 (addExp)]
    MOD       [reduce using rule 66 (addExp)]
    $default  reduce using rule 66 (addExp)


State 111

   68 mulExp: mulExp MUL unaryExp •

    $default  reduce using rule 68 (mulExp)


State 112

   69 mulExp: mulExp DIV unaryExp •

    $default  reduce using rule 69 (mulExp)


State 113

   70 mulExp: mulExp MOD unaryExp •

    $default  reduce using rule 70 (mulExp)


State 114

   49 Stmt: SEMICOLON •

    $default  reduce using rule 49 (Stmt)


State 115

   41 BlockLBRACE: LBRACE •

    $default  reduce using rule 41 (BlockLBRACE)


State 116

   59 IF: IF_ •

    $default  reduce using rule 59 (IF)


State 117

   60 WHILE: WHILE_ •

    $default  reduce using rule 60 (WHILE)


State 118

   55 Stmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 148


State 119

   56 Stmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 149


State 120

   57 Stmt: RETURN • SEMICOLON
   58     | RETURN • Exp SEMICOLON

    SEMICOLON   shift, and go to state 150
    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 151
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 121

   45 BlockItem: Decl •

    $default  reduce using rule 45 (BlockItem)


State 122

   28 VarDecl: BasicType • VarDefs SEMICOLON

    IDENTIFIER  shift, and go to state 14

    DeclCompIdentifier   go to state 15
    pDeclIdentifier      go to state 59
    ArrayDeclIdentifier  go to state 17
    DeclIdentifier       go to state 18
    VarDefs              go to state 19
    VarDef               go to state 20


State 123

   51 Stmt: Block •

    $default  reduce using rule 51 (Stmt)


State 124

   40 Block: BlockLBRACE • BlockItems BlockRBRACE

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItems       go to state 152
    BlockItem        go to state 126
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 125

   35 FuncDef: BasicType pDeclIdentifier FuncLPAREN RPAREN LBRACE BlockItems • RBRACE
   44 BlockItems: BlockItems • BlockItem

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    RBRACE      shift, and go to state 153
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItem        go to state 154
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 126

   43 BlockItems: BlockItem •

    $default  reduce using rule 43 (BlockItems)


State 127

   46 BlockItem: Stmt •

    $default  reduce using rule 46 (BlockItem)


State 128

   52 Stmt: IF • LPAREN Cond RPAREN Stmt_ ELSE Stmt_
   53     | IF • LPAREN Cond RPAREN Stmt_

    LPAREN  shift, and go to state 155


State 129

   54 Stmt: WHILE • LPAREN Cond RPAREN Stmt_

    LPAREN  shift, and go to state 156


State 130

   50 Stmt: Exp • SEMICOLON

    SEMICOLON  shift, and go to state 157


State 131

   38 FuncFParams: FuncFParams COMMA FuncFParam •

    $default  reduce using rule 38 (FuncFParams)


State 132

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN FuncFParams RPAREN LBRACE • BlockItems RBRACE

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItems       go to state 158
    BlockItem        go to state 126
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 133

   27 ArrayInitVal: ArrayInitVal COMMA • IntConst

    INTEGER  shift, and go to state 42

    IntConst  go to state 159


State 134

   33 VarDef: ArrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE •

    $default  reduce using rule 33 (VarDef)


State 135

   11 ConstDef: ArrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE •

    $default  reduce using rule 11 (ConstDef)


State 136

   84 LOrExp: LAndExp OR LOrExp •

    $default  reduce using rule 84 (LOrExp)


State 137

   86 LAndExp: eqExp AND LAndExp •

    $default  reduce using rule 86 (LAndExp)


State 138

   88 eqExp: relExp EQ eqExp •

    $default  reduce using rule 88 (eqExp)


State 139

   93 relExp: relExp GRAEQ Exp •

    $default  reduce using rule 93 (relExp)


State 140

   94 relExp: relExp LESEQ Exp •

    $default  reduce using rule 94 (relExp)


State 141

   89 eqExp: relExp NEQ eqExp •

    $default  reduce using rule 89 (eqExp)


State 142

   91 relExp: relExp GRA Exp •

    $default  reduce using rule 91 (relExp)


State 143

   92 relExp: relExp LES Exp •

    $default  reduce using rule 92 (relExp)


State 144

   18 ArrayIdentifier: ArrayIdentifier LBRACKET Exp RBRACKET •

    $default  reduce using rule 18 (ArrayIdentifier)


State 145

   82 FuncRParams: FuncRParams COMMA • Exp

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 160
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 146

   78 primaryExp: Identifier LPAREN FuncRParams RPAREN •

    $default  reduce using rule 78 (primaryExp)


State 147

   17 ArrayIdentifier: Identifier LBRACKET Exp RBRACKET •

    $default  reduce using rule 17 (ArrayIdentifier)


State 148

   55 Stmt: BREAK SEMICOLON •

    $default  reduce using rule 55 (Stmt)


State 149

   56 Stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 56 (Stmt)


State 150

   57 Stmt: RETURN SEMICOLON •

    $default  reduce using rule 57 (Stmt)


State 151

   58 Stmt: RETURN Exp • SEMICOLON

    SEMICOLON  shift, and go to state 161


State 152

   40 Block: BlockLBRACE BlockItems • BlockRBRACE
   44 BlockItems: BlockItems • BlockItem

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    RBRACE      shift, and go to state 162
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockRBRACE      go to state 163
    BlockItem        go to state 154
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 153

   35 FuncDef: BasicType pDeclIdentifier FuncLPAREN RPAREN LBRACE BlockItems RBRACE •

    $default  reduce using rule 35 (FuncDef)


State 154

   44 BlockItems: BlockItems BlockItem •

    $default  reduce using rule 44 (BlockItems)


State 155

   52 Stmt: IF LPAREN • Cond RPAREN Stmt_ ELSE Stmt_
   53     | IF LPAREN • Cond RPAREN Stmt_

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    Cond             go to state 164
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    LOrExp           go to state 66
    LAndExp          go to state 67
    eqExp            go to state 68
    relExp           go to state 69


State 156

   54 Stmt: WHILE LPAREN • Cond RPAREN Stmt_

    LPAREN      shift, and go to state 37
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Exp              go to state 73
    Cond             go to state 165
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51
    LOrExp           go to state 66
    LAndExp          go to state 67
    eqExp            go to state 68
    relExp           go to state 69


State 157

   50 Stmt: Exp SEMICOLON •

    $default  reduce using rule 50 (Stmt)


State 158

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN FuncFParams RPAREN LBRACE BlockItems • RBRACE
   44 BlockItems: BlockItems • BlockItem

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    RBRACE      shift, and go to state 166
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItem        go to state 154
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 159

   27 ArrayInitVal: ArrayInitVal COMMA IntConst •

    $default  reduce using rule 27 (ArrayInitVal)


State 160

   82 FuncRParams: FuncRParams COMMA Exp •

    $default  reduce using rule 82 (FuncRParams)


State 161

   58 Stmt: RETURN Exp SEMICOLON •

    $default  reduce using rule 58 (Stmt)


State 162

   42 BlockRBRACE: RBRACE •

    $default  reduce using rule 42 (BlockRBRACE)


State 163

   40 Block: BlockLBRACE BlockItems BlockRBRACE •

    $default  reduce using rule 40 (Block)


State 164

   52 Stmt: IF LPAREN Cond • RPAREN Stmt_ ELSE Stmt_
   53     | IF LPAREN Cond • RPAREN Stmt_

    RPAREN  shift, and go to state 167


State 165

   54 Stmt: WHILE LPAREN Cond • RPAREN Stmt_

    RPAREN  shift, and go to state 168


State 166

   34 FuncDef: BasicType pDeclIdentifier FuncLPAREN FuncFParams RPAREN LBRACE BlockItems RBRACE •

    $default  reduce using rule 34 (FuncDef)


State 167

   52 Stmt: IF LPAREN Cond RPAREN • Stmt_ ELSE Stmt_
   53     | IF LPAREN Cond RPAREN • Stmt_

    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 169
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Block            go to state 123
    BlockLBRACE      go to state 124
    Stmt_            go to state 170
    Stmt             go to state 171
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 168

   54 Stmt: WHILE LPAREN Cond RPAREN • Stmt_

    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 169
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Block            go to state 123
    BlockLBRACE      go to state 124
    Stmt_            go to state 172
    Stmt             go to state 171
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 169

   41 BlockLBRACE: LBRACE •
   47 Stmt_: LBRACE • BlockItems RBRACE

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    T_INT       [reduce using rule 41 (BlockLBRACE)]
    T_VOID      [reduce using rule 41 (BlockLBRACE)]
    SEMICOLON   [reduce using rule 41 (BlockLBRACE)]
    LPAREN      [reduce using rule 41 (BlockLBRACE)]
    LBRACE      [reduce using rule 41 (BlockLBRACE)]
    CONST       [reduce using rule 41 (BlockLBRACE)]
    IF_         [reduce using rule 41 (BlockLBRACE)]
    WHILE_      [reduce using rule 41 (BlockLBRACE)]
    BREAK       [reduce using rule 41 (BlockLBRACE)]
    CONTINUE    [reduce using rule 41 (BlockLBRACE)]
    RETURN      [reduce using rule 41 (BlockLBRACE)]
    PLUS        [reduce using rule 41 (BlockLBRACE)]
    MINUS       [reduce using rule 41 (BlockLBRACE)]
    NOT         [reduce using rule 41 (BlockLBRACE)]
    IDENTIFIER  [reduce using rule 41 (BlockLBRACE)]
    INTEGER     [reduce using rule 41 (BlockLBRACE)]

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItems       go to state 173
    BlockItem        go to state 126
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 170

   52 Stmt: IF LPAREN Cond RPAREN Stmt_ • ELSE Stmt_
   53     | IF LPAREN Cond RPAREN Stmt_ •

    ELSE  shift, and go to state 174

    ELSE      [reduce using rule 53 (Stmt)]
    $default  reduce using rule 53 (Stmt)


State 171

   48 Stmt_: Stmt •

    $default  reduce using rule 48 (Stmt_)


State 172

   54 Stmt: WHILE LPAREN Cond RPAREN Stmt_ •

    $default  reduce using rule 54 (Stmt)


State 173

   44 BlockItems: BlockItems • BlockItem
   47 Stmt_: LBRACE BlockItems • RBRACE

    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 115
    RBRACE      shift, and go to state 175
    CONST       shift, and go to state 3
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    Decl             go to state 121
    ConstDecl        go to state 6
    BasicType        go to state 122
    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    VarDecl          go to state 8
    Block            go to state 123
    BlockLBRACE      go to state 124
    BlockItem        go to state 154
    Stmt             go to state 127
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 174

   52 Stmt: IF LPAREN Cond RPAREN Stmt_ ELSE • Stmt_

    SEMICOLON   shift, and go to state 114
    LPAREN      shift, and go to state 37
    LBRACE      shift, and go to state 169
    IF_         shift, and go to state 116
    WHILE_      shift, and go to state 117
    BREAK       shift, and go to state 118
    CONTINUE    shift, and go to state 119
    RETURN      shift, and go to state 120
    PLUS        shift, and go to state 38
    MINUS       shift, and go to state 39
    NOT         shift, and go to state 40
    IDENTIFIER  shift, and go to state 41
    INTEGER     shift, and go to state 42

    IntConst         go to state 43
    CompIdentifier   go to state 44
    ArrayIdentifier  go to state 45
    Identifier       go to state 46
    Block            go to state 123
    BlockLBRACE      go to state 124
    Stmt_            go to state 176
    Stmt             go to state 171
    IF               go to state 128
    WHILE            go to state 129
    Exp              go to state 130
    addExp           go to state 48
    mulExp           go to state 49
    unaryExp         go to state 50
    primaryExp       go to state 51


State 175

   47 Stmt_: LBRACE BlockItems RBRACE •

    $default  reduce using rule 47 (Stmt_)


State 176

   52 Stmt: IF LPAREN Cond RPAREN Stmt_ ELSE Stmt_ •

    $default  reduce using rule 52 (Stmt)
